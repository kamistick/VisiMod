% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VisiMod.R
\name{VisiMod}
\alias{VisiMod}
\title{Model and Map VI}
\usage{
VisiMod(
  dtm,
  dsm,
  num_pts,
  dist,
  vi_type,
  vi_fov = 180,
  vi_azi = 0,
  save_dir = getwd(),
  cores = floor(parallel::detectCores()/2)
)
}
\arguments{
\item{dtm}{SpatRaster. A digital terrain model at finest resolution available}

\item{dsm}{SpatRaster. A digital surface model at finest resolution available}

\item{num_pts}{Numeric. Number of points used to train the model}

\item{dist}{Numeric. distance to which VI is calculated. If multiple distances should be considered use c().}

\item{vi_type}{Character. Defines which type of VI calculation you would like to conduct. One of: "omnidir" (omnidirectional, 360 degree), "directional_single" (a single specified view direction for each point), "directional_random" (viewing directions will be randomly assigned to each point).}

\item{vi_fov}{Numeric. Defines the angular field of view, in degrees, of the directional wedge used for the VI calculation. Only used if vi_type == "directional_single". Values must be > 0 and < 360}

\item{vi_azi}{Numeric. Defines the azimuth, or central viewing direction, in degrees, of the directional wedge used for VI calculation.  Only used if vi_type == "directional_single". Values must be >= 0 and < 360.}

\item{save_dir}{Character. The directory where intermediary and output files will be saved. Default is your working directory.}

\item{cores}{Numeric. The number of cores used for parallel processing of VI calculation, modeling, and mapping. The default number of cores is half of the cores on your machine.}
}
\value{
Returns a list of SpatRasters of mapped VI with a potential range of 0-1. If only one combination of distance, fov, and azimuth are considered, the list will have a length of 1 and the map of VI can be accessed using VisiMod_fxn_output[\link{1}] where VisiMod_fxn_output <- VisiMod(...).
}
\description{
This function takes a digital terrain model (DTM) and a digital surface model (DSM) and builds a predictive model to map modeled visibility index (VI) across the study area. This function sequentially combines the full suite of VisiMod functions ((1) \code{\link[=prep_dems]{prep_dems()}} (2) \code{\link[=gen_pts]{gen_pts()}}, (3) \code{\link[=calc_vi]{calc_vi()}}, (4) \code{\link[=gen_preds]{gen_preds()}}, (5) \code{\link[=mod_vi]{mod_vi()}}, and \code{\link[=map_vi]{map_vi()}}) to return a wall-to-wall SpatRaster of VI values.
}
\details{
\itemize{
\item This function assumes default parameters for some of the internal functions (\code{\link[=gen_preds]{gen_preds()}} and \code{\link[=mod_vi]{mod_vi()}}). For \code{\link[=gen_preds]{gen_preds()}} a default aggregation factor of 10 is assumed. For \code{\link[=mod_vi]{mod_vi()}} \code{cross_validate} and \code{tune} are assumed to be \code{FALSE}. See respective function details for more. If users desire more control over these parameters they should execute the workflow in the order laid out in this function's description.
\item \code{dtm} and \code{dsm} SpatRasters can be defined using the terra library. They should have the same coordinate system, resolution, extent, and origin.
\item The more points (\code{num_pts}) generated, the more robust the modeling procedure will be; however, more points will also increase processing time for subsequent functions in the workflow. The default is set to 200, which should balance model performance and processing time. We do not recommend generating more than 1000 points.
\item Processing time will increase exponentially with increasing distances (\code{dist}). However, this also depends on the spatial resolution of the input \code{dtm}/\code{dsm}. For example, looking at 200m with a 1m resolution is functionally the same as a 400m distance with a 2m resolution, in terms of processing time. We do not recommend attempting this workflow at distances beyond 2000x the input resolution.
\item Note that this function is parallelized and can leverage as many cores as your computer has available to speed up processing. As with all parallel processing in R, however, there is an overhead cost associated with setting up parallel operations. So, for small numbers of input points (\code{num_pts}) and/or short viewing distance (\code{dist}), using many cores may not speed up your processing significantly.
}
}
\examples{
# get your dtm and dsm
dsm <- rast("dsm.tif")
dtm <- rast("dtm.tif")

# model and map VI
outras <- VisiMod(dtm, dsm, 500, 500, "directional_single", 120, c(0,120,240),  "C:\\\\proj1\\\\", 4)

# create a 3 band raster to display in RGB
stack1 <- terra::`add<-`(outras[[1]], outras[[2]])
multiband_ras <- terra::`add<-`(stack1, outras[[3]])
writeRaster(multiband_ras, "C:\\\\proj1\\\\vi_map.tif")
}
